[{"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\404.jsx":"1","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\confirmar\\[token].jsx":"2","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\crear-cuenta.jsx":"3","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\faltantes.jsx":"4","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\index.jsx":"5","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\nuevoproducto.jsx":"6","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\olvide-password\\[token].jsx":"7","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\olvide-password.jsx":"8","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\producto\\editar\\[url].jsx":"9","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\producto\\[id].jsx":"10","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\productos.jsx":"11","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\_app.jsx":"12","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\ContraseñaCambiada.jsx":"13","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\Login.jsx":"14","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\NuevaContraseña.jsx":"15","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\NuevaCuenta.jsx":"16","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\OlvidePassword.jsx":"17","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\faltantes\\ListadoFaltantes.jsx":"18","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\faltantes\\ProductoFaltante.jsx":"19","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\historial\\compras\\Compra.jsx":"20","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\historial\\compras\\ListadoCompras.jsx":"21","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\historial\\ventas\\ListadoVentas.jsx":"22","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\historial\\ventas\\Venta.jsx":"23","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\layout\\Layout.jsx":"24","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Alerta.jsx":"25","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\EditarProducto.jsx":"26","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Formulario.jsx":"27","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\ListadoProductos.jsx":"28","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\NoEncontrado.jsx":"29","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Producto.jsx":"30","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\ProductoNuevo.jsx":"31","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Proveedor.jsx":"32","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Rubro.jsx":"33","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\VerProducto.jsx":"34","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\lib\\dbConnect.js":"35","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\compras.jsx":"36"},{"size":230,"mtime":1651170888569,"results":"37","hashOfConfig":"38"},{"size":1100,"mtime":1653367873410,"results":"39","hashOfConfig":"38"},{"size":884,"mtime":1651170888579,"results":"40","hashOfConfig":"38"},{"size":318,"mtime":1651170888579,"results":"41","hashOfConfig":"38"},{"size":896,"mtime":1651170888579,"results":"42","hashOfConfig":"38"},{"size":885,"mtime":1651170888579,"results":"43","hashOfConfig":"38"},{"size":749,"mtime":1653367883050,"results":"44","hashOfConfig":"38"},{"size":897,"mtime":1651170888589,"results":"45","hashOfConfig":"38"},{"size":1892,"mtime":1653367904476,"results":"46","hashOfConfig":"38"},{"size":1893,"mtime":1653367893640,"results":"47","hashOfConfig":"38"},{"size":854,"mtime":1651170888589,"results":"48","hashOfConfig":"38"},{"size":600,"mtime":1653061632116,"results":"49","hashOfConfig":"38"},{"size":889,"mtime":1651170888549,"results":"50","hashOfConfig":"38"},{"size":4812,"mtime":1651170888549,"results":"51","hashOfConfig":"38"},{"size":4933,"mtime":1651170888549,"results":"52","hashOfConfig":"38"},{"size":6758,"mtime":1651170888549,"results":"53","hashOfConfig":"38"},{"size":3583,"mtime":1651170888549,"results":"54","hashOfConfig":"38"},{"size":8445,"mtime":1653932526266,"results":"55","hashOfConfig":"38"},{"size":3110,"mtime":1653516649832,"results":"56","hashOfConfig":"38"},{"size":2004,"mtime":1653416224704,"results":"57","hashOfConfig":"38"},{"size":6622,"mtime":1653931129475,"results":"58","hashOfConfig":"38"},{"size":113,"mtime":1653030397334,"results":"59","hashOfConfig":"38"},{"size":89,"mtime":1653030394660,"results":"60","hashOfConfig":"38"},{"size":5786,"mtime":1653060991213,"results":"61","hashOfConfig":"38"},{"size":249,"mtime":1651170888559,"results":"62","hashOfConfig":"38"},{"size":201,"mtime":1651170888559,"results":"63","hashOfConfig":"38"},{"size":47626,"mtime":1653934525221,"results":"64","hashOfConfig":"38"},{"size":8193,"mtime":1653933900231,"results":"65","hashOfConfig":"38"},{"size":541,"mtime":1651170888559,"results":"66","hashOfConfig":"38"},{"size":10652,"mtime":1653698824273,"results":"67","hashOfConfig":"38"},{"size":160,"mtime":1651170888564,"results":"68","hashOfConfig":"38"},{"size":150,"mtime":1651170888564,"results":"69","hashOfConfig":"38"},{"size":130,"mtime":1651170888564,"results":"70","hashOfConfig":"38"},{"size":13017,"mtime":1653945013405,"results":"71","hashOfConfig":"38"},{"size":0,"mtime":1651170888569,"results":"72","hashOfConfig":"38"},{"size":254,"mtime":1653068488756,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qvq4vv",{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\404.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\confirmar\\[token].jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\crear-cuenta.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\faltantes.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\index.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\nuevoproducto.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\olvide-password\\[token].jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\olvide-password.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\producto\\editar\\[url].jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\producto\\[id].jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\productos.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\_app.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\ContraseñaCambiada.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\Login.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\NuevaContraseña.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\NuevaCuenta.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\auth\\OlvidePassword.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\faltantes\\ListadoFaltantes.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\faltantes\\ProductoFaltante.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\historial\\compras\\Compra.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\historial\\compras\\ListadoCompras.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\historial\\ventas\\ListadoVentas.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\historial\\ventas\\Venta.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\layout\\Layout.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Alerta.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\EditarProducto.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Formulario.jsx",["147","148","149"],"import { useState, useContext, useEffect } from \"react\"\r\nimport Rubro from \"./Rubro\"\r\nimport Proveedor from \"./Proveedor\"\r\nimport { generarFecha, hoy } from \"../../helpers\"\r\nimport productoContext from \"../../context/productos/productoContext\"\r\nimport authContext from \"../../context/auth/authContext\"\r\nimport Swal from \"sweetalert2\"\r\nimport compraContext from \"../../context/historial/compras/compraContext\"\r\n\r\nconst Formulario = ({productoEditar}) => {\r\n\r\n    const AuthContext = useContext(authContext)\r\n    const {modo, usuario} = AuthContext\r\n\r\n    const CompraContext = useContext(compraContext)\r\n    const {traerCompras} = CompraContext\r\n\r\n    const productosContext = useContext(productoContext)\r\n    const { \r\n        productos,\r\n        productoSeleccionado, \r\n        agregarProducto, \r\n        agregarRubro, \r\n        agregarProveedor, \r\n        editarProducto, \r\n        mensajeCodigo, \r\n        mensajeRubro, \r\n        mensajeProveedor, \r\n        traerProductos, \r\n        traerRubros, \r\n        rubros, \r\n        proveedores, \r\n        traerProveedores, \r\n        valorDeVenta,\r\n        valorDeVentaConocidos,\r\n        valorDeVentaEfectivo,\r\n        valorDeVentaTarjeta,\r\n        limpiarPrecioVenta, \r\n        precioVenta,\r\n        traerDolarAPI, \r\n        traerDolarBD,\r\n    } = productosContext\r\n   \r\n    const [valoresR, setValoresR] = useState(\"\")    //contiene lo que voy escribiendo en rubro\r\n    const [valoresP, setValoresP] = useState(\"\")    //contiene lo que voy escribiendo en proveedor\r\n    const [rubroSelect, setRubroSelect] = useState(productoEditar?.rubro ?? \"\")\r\n    const [proveedorSelect, setProveedorSelect] = useState(productoEditar?.proveedor ?? \"\")\r\n    const [valorFaltante, setValorFaltante] = useState(productoEditar?.añadirFaltante ?? false)\r\n    const [cantidad, setCantidad] = useState(\"\")\r\n    const desdeForm = true  //con esto me aseguro que los datos que envio para agregar producto/compra o editar producto/compra, vienen desde el formulario, y no se editan en el listado\r\n\r\n    const [producto, setProducto] = useState({\r\n        nombre: productoEditar?.nombre ?? \"\",\r\n        modelo: productoEditar?.modelo ?? \"\",\r\n        marca: productoEditar?.marca ?? \"\",\r\n        codigo: productoEditar?.codigo ?? \"\",\r\n        barras: productoEditar?.barras ?? \"\",\r\n        valor_dolar_compra: productoEditar?.valor_dolar_compra ?? \"\",\r\n        precio_venta: productoEditar?.precio_venta ?? 0,\r\n        precio_venta_conocidos: productoEditar?.precio_venta_conocidos ?? 0,\r\n        precio_venta_efectivo: productoEditar?.precio_venta_efectivo ?? 0,\r\n        precio_venta_tarjeta: productoEditar?.precio_venta_tarjeta ?? 0,\r\n        precio_compra_dolar: productoEditar?.precio_compra_dolar ?? \"\",\r\n        precio_compra_peso: productoEditar?.precio_compra_peso ?? \"\",\r\n        rubro: productoEditar?.rubro ?? \"\",\r\n        proveedor: productoEditar?.proveedor ?? \"\",\r\n        todos_proveedores: productoEditar?.todos_proveedores ?? [],\r\n        fecha_compra: productoEditar?.fecha_compra ?? hoy ?? \"\",\r\n        disponibles: productoEditar?.disponibles ?? \"\",\r\n        rentabilidad: productoEditar?.rentabilidad ?? \"\",\r\n        notas: productoEditar?.notas ?? \"\",\r\n        faltante: productoEditar?.faltante ?? false,\r\n        limiteFaltante: productoEditar?.limiteFaltante ?? \"\",\r\n        añadirFaltante: productoEditar?.añadirFaltante ?? false\r\n    })\r\n    const {nombre, marca, modelo, codigo, barras, rubro, precio_venta, precio_venta_conocidos, precio_venta_efectivo, precio_venta_tarjeta, precio_compra_dolar, fecha_compra, precio_compra_peso, valor_dolar_compra, proveedor, todos_proveedores, disponibles, rentabilidad, notas, faltante, limiteFaltante, añadirFaltante} = producto\r\n    \r\n\r\n    //hago un get a todas estas colecciones para tenerlos en este componente\r\n    useEffect(() => {\r\n        if(usuario) {   //solo hace estos get cuando exista el usuario\r\n            traerDolarBD()\r\n            traerDolarAPI()\r\n            traerRubros()\r\n            traerProveedores()\r\n            traerCompras()\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [usuario, productos])    //cuando cambie cualquiera de las 2 se ejecuta el useefect\r\n    \r\n    useEffect(() => {\r\n        if(usuario) {\r\n            traerProductos()\r\n        }\r\n    }, [usuario])\r\n\r\n\r\n    //cada vez que cambie el producto seleccionado me vacia el input de precio sugerido\r\n    useEffect(() => {\r\n        limpiarPrecioVenta()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [productoSeleccionado])\r\n    \r\n   \r\n\r\n    //cada vez que escriba en los inputs se realiza el calculo aprox para el precio de la venta\r\n    useEffect(() => {\r\n        precioVenta(valor_dolar_compra, precio_compra_dolar, precio_compra_peso, rentabilidad)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [valor_dolar_compra, precio_compra_dolar, precio_compra_peso, rentabilidad])\r\n\r\n\r\n    useEffect(() => {\r\n        producto.proveedor = proveedorSelect\r\n    }, [proveedorSelect])\r\n    useEffect(() => {\r\n        producto.proveedor = valoresP\r\n    }, [valoresP])\r\n\r\n\r\n\r\n    const onChange = e => {\r\n        setProducto({\r\n            ...producto,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    const onChangeNumeros = e => {\r\n        setProducto({\r\n            ...producto,\r\n            [e.target.name]: e.target.value.replace(\",\", \".\"),\r\n        })\r\n    }\r\n    \r\n    \r\n    const onChangeRubroInput = e => {\r\n        setValoresR(e.target.value.toUpperCase())\r\n    }\r\n    const onChangeRubroSelect = e => {\r\n        setRubroSelect(e.target.value.toUpperCase())\r\n    }\r\n    if(valoresR && !rubroSelect) {\r\n        producto.rubro = valoresR\r\n    }\r\n    if(rubroSelect && !valoresR) {\r\n        producto.rubro = rubroSelect\r\n    }\r\n    \r\n    const onChangeProveedorInput = e => {\r\n        setValoresP(e.target.value.toUpperCase())\r\n    }\r\n    const onChangeProveedorSelect = e => {\r\n        setProveedorSelect(e.target.value.toUpperCase())\r\n    }\r\n    if(valoresP && !proveedorSelect) {\r\n        producto.proveedor = valoresP\r\n     }\r\n    if(proveedorSelect && !valoresP) {\r\n        producto.proveedor = proveedorSelect\r\n    } \r\n\r\n    if(valorFaltante) {\r\n        producto.añadirFaltante = true\r\n    } else {\r\n        producto.añadirFaltante = false\r\n    }\r\n\r\n    if(!valor_dolar_compra || !rentabilidad && precio_compra_peso) {\r\n        producto.precio_venta = 0\r\n        producto.precio_venta_conocidos = 0\r\n        producto.precio_venta_efectivo = 0\r\n        producto.precio_venta_tarjeta = 0\r\n    }\r\n    if(!valor_dolar_compra || !rentabilidad && precio_compra_dolar || !precio_compra_dolar) {\r\n        producto.precio_venta = 0\r\n        producto.precio_venta_conocidos = 0\r\n        producto.precio_venta_efectivo = 0\r\n        producto.precio_venta_tarjeta = 0\r\n    }\r\n\r\n\r\n    const alertaNuevoCorrecto = () => {\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: `${modo ? '<h3 style=\"color:white\">Se creó el producto correctamente</h3>' : '<h3 style=\"color:#545454\">Se creó el producto correctamente</h3>'}`,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n        })\r\n    }\r\n    const alertaEditarCorrecto = () => {\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: `${modo ? '<h3 style=\"color:white\">Se modificó el producto correctamente</h3>' : '<h3 style=\"color:#545454\">Se modificó el producto correctamente</h3>'}`,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n        })\r\n    }\r\n\r\n    //! ENVIAR FORMULARIO\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        //Validar nombre\r\n        if(nombre === \"\"){\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>nombre</b> es obligatorio.</p>' : '<p style=\"color:#545454\">El <b>nombre</b> es obligatorio.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        //valido codigo. Esto lo hago para que no se vacíe el campo en caso de que haya algun error de backend\r\n        if(productos) { //si existe algun producto creado, hago un recorrido\r\n            const boolean = productos.map(producto => producto.codigo == codigo ? true : false )\r\n            const contiene = boolean.includes(true) //si existe el codigo del formulario en un producto ya creado guardo un true\r\n            const productoeditar = productoEditar?.codigo   //en caso de que el producto sea a editar, guardo su codigo\r\n\r\n            if(contiene && productoeditar !== codigo) { //si el codigo del form es igual al de algun producto que no estoy editando muestro error. Si es un producto editado, ignora esta linea y se valida el campo\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                    html: `${modo ? '<p style=\"color:white\">El <b>codigo</b> ya esta ingresado.</p>' : '<p style=\"color:#545454\">El <b>codigo</b> ya esta ingresado.</p>'}`,\r\n                    background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                  })\r\n                return\r\n            }\r\n        }\r\n        //convierto el valor del state a numero\r\n        const codigoCambiado = Number(codigo)\r\n        if(!codigo || codigo < 1 || isNaN(codigo) || !Number.isInteger(codigoCambiado) ) {  //verifico si es numero entero con isInteger\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>código</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>código</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        if(codigo.length > 3) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>código</b> debe ser un número menor a 4 dígitos</p>' : '<p style=\"color:#545454\">El <b>código</b> debe ser un número menor a 4 dígitos</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n       \r\n      //validar el nuevo rubro. Esto lo hago para que no se vacíe el campo en caso de que haya algun error de backend\r\n        if(valoresR) {  //si tiene algo el input de rubro\r\n            if(rubroSelect && valoresR) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                    html: `${modo ? '<p style=\"color:white\">Ingrese 1 solo <b>rubro</b> a la vez.</p>' : '<p style=\"color:#545454\">Ingrese un solo <b>rubro</b> a la vez.</p>'}`,\r\n                    background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                })\r\n                return\r\n            }\r\n            if(rubros) {    //si hay algun rubro creado\r\n                const boolean = rubros.map(rubro => rubro.nombre == valoresR ? true : false )   //recorro el state de rubros\r\n                const contiene = boolean.includes(true) //devuelvo si existe un rubro con el mismo nombre\r\n                if(contiene) {  //lanzo el error en ese caso\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                        html: `${modo ? '<p style=\"color:white\">El <b>rubro</b> ya está ingresado.</p>' : '<p style=\"color:#545454\">El <b>rubro</b> ya está ingresado.</p>'}`,\r\n                        background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                    })\r\n                    return\r\n                } \r\n            }\r\n        }\r\n\r\n        const cantidadCambiada = Number(cantidad)\r\n        if(cantidad < 0 || isNaN(cantidad) || !Number.isInteger(cantidadCambiada) ) {  //verifico si es numero entero con isInteger\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">La <b>cantidad</b> de productos a ingresar debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">La <b>cantidad</b> de productos a ingresar debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        if(codigo.length > 3) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>código</b> debe ser un número menor a 4 dígitos</p>' : '<p style=\"color:#545454\">El <b>código</b> debe ser un número menor a 4 dígitos</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n\r\n        //Validar precio del dolar\r\n        if(!valor_dolar_compra) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>precio del dolar </b> es obligatorio.</p>' : '<p style=\"color:#545454\">El <b>precio del dolar </b> es obligatorio.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        } else {\r\n            if(isNaN(valor_dolar_compra) || valor_dolar_compra < 1) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                    html: `${modo ? '<p style=\"color:white\">El <b>precio del dolar</b> debe ser 1 como mínimo.</p>' : '<p style=\"color:#545454\">El <b>precio del dolar</b> debe ser 1 como mínimo.</p>'}`,\r\n                    background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                  })\r\n                return\r\n            }\r\n        }\r\n            \r\n        \r\n        //validar valor compra dolar\r\n        if(isNaN(precio_compra_dolar) || precio_compra_dolar < 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>precio de compra en USD</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>precio de compra en USD</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        //validar valor compra peso\r\n        if(isNaN(precio_compra_peso) || precio_compra_peso < 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>precio de compra en ARS</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>precio de compra en ARS</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n\r\n        //validar los 2 input juntos del precio\r\n        if(precio_compra_dolar && precio_compra_peso) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">Solo se puede ingresar un tipo de moneda en la compra.</p>' : '<p style=\"color:#545454\">Solo se puede ingresar un tipo de moneda en la compra.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n\r\n        //validar rentabilidad\r\n        if(isNaN(rentabilidad) || rentabilidad < 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">La <b>rentabilidad</b> tiene que ser mayor a 0.</p>' : '<p style=\"color:#545454\">La <b>rentabilidad</b> tiene que ser mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }  \r\n        \r\n        //Validar el precio de venta\r\n        if(isNaN(precio_venta) || precio_venta < 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>precio de venta</b> debe ser mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>precio de venta</b> debe ser mayor a 0.</p>'}`,\r\n\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        \r\n        \r\n        //validar numero de faltantes\r\n        const limiteFaltanteCambiado = Number(limiteFaltante)\r\n        if( limiteFaltante < 0 || isNaN(limiteFaltante) || !Number.isInteger(limiteFaltanteCambiado)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">Los <b>faltantes</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">Los <b>faltantes</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n            })\r\n            return\r\n        } \r\n        \r\n        //validar el nuevo proveedor. Esto lo hago para que no se vacíe el campo en caso de que haya algun error de backend\r\n        if(valoresP) {  //si tiene algo el input de proveedor\r\n            if(proveedorSelect && valoresP) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                    html: `${modo ? '<p style=\"color:white\">Ingrese 1 solo <b>proveedor</b> a la vez.</p>' : '<p style=\"color:#545454\">Ingrese un solo <b>proveedor</b> a la vez.</p>'}`,\r\n                    background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                })\r\n                return\r\n            }\r\n\r\n            if(proveedores) {    //si hay algun proveedor creado\r\n                const boolean = proveedores.map(proveedor => proveedor.nombre == valoresP ? true : false )   //recorro el state de proveedores\r\n                const contiene = boolean.includes(true) //devuelvo si existe un proveedor con el mismo nombre\r\n                if(contiene) {  //lanzo el error en ese caso\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                        html: `${modo ? '<p style=\"color:white\">El <b>proveedor</b> ya está ingresado.</p>' : '<p style=\"color:#545454\">El <b>proveedor</b> ya está ingresado.</p>'}`,\r\n                        background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                    })\r\n                    return\r\n                }\r\n            }\r\n\r\n            const boolean = producto.todos_proveedores.map(provider => provider === proveedor ? true : false)\r\n            const prov = boolean.includes(true)\r\n            if(!prov || prov.length === 0) {\r\n                producto.todos_proveedores.push(valoresP)\r\n            }\r\n                \r\n            \r\n        }\r\n        if(proveedorSelect) {\r\n            const boolean = producto.todos_proveedores.map(provider => provider === proveedor ? true : false)\r\n            const prov = boolean.includes(true)\r\n            if(!prov || prov.length === 0) {\r\n                producto.todos_proveedores.push(proveedorSelect)\r\n            }\r\n            \r\n        }\r\n\r\n        //si no se cumple ninguna condicion que le puse arriba, y tampoco está vacio el input, lo envio a la bd\r\n        if(valoresP) {\r\n            agregarProveedor(proveedor)\r\n        }\r\n        //si no se cumple ninguna condicion que le puse arriba, y tampoco está vacio el input, lo envio a la bd\r\n        if(valoresR) {\r\n            agregarRubro(rubro)\r\n        }\r\n\r\n        //si es nuevo producto\r\n        if(!productoEditar) {\r\n            if(cantidad) {\r\n                producto.disponibles = cantidad\r\n            }\r\n            if(valorDeVenta) {\r\n                producto.precio_venta = valorDeVenta\r\n                producto.precio_venta_conocidos = valorDeVentaConocidos\r\n                producto.precio_venta_efectivo = valorDeVentaEfectivo\r\n                producto.precio_venta_tarjeta = valorDeVentaTarjeta\r\n            }\r\n            agregarProducto(producto, cantidad, desdeForm)\r\n            setCantidad(\"\")\r\n            setRubroSelect(\"\")\r\n            setProveedorSelect(\"\")\r\n            setProducto({\r\n                nombre: \"\",\r\n                marca: \"\", \r\n                modelo: \"\", \r\n                codigo: \"\",\r\n                barras: \"\",\r\n                rubro: \"\",\r\n                proveedor: \"\",\r\n                precio_venta: \"\",\r\n                precio_venta_conocidos: \"\",\r\n                precio_venta_efectivo: \"\",\r\n                precio_venta_tarjeta: \"\",\r\n                precio_compra_dolar: \"\", \r\n                fecha_compra: hoy, \r\n                precio_compra_peso: \"\", \r\n                valor_dolar_compra: \"\", \r\n                rentabilidad: \"\", \r\n                notas: \"\",\r\n                faltante: false,\r\n                limiteFaltante: \"\",\r\n                añadirFaltante: false\r\n                })\r\n            setValoresR(\"\")\r\n            setValoresP(\"\")\r\n            traerProductos()\r\n            alertaNuevoCorrecto()\r\n        } else {\r\n            //si hay que editar\r\n            if(cantidad && disponibles) {\r\n                producto.disponibles = Number(producto.disponibles) + Number(cantidad)\r\n            } else {\r\n                if(cantidad && !disponibles) {\r\n                    producto.disponibles = Number(cantidad)\r\n                }\r\n            }\r\n            if(valorDeVenta) {\r\n                producto.precio_venta = valorDeVenta\r\n                producto.precio_venta_conocidos = valorDeVentaConocidos\r\n                producto.precio_venta_efectivo = valorDeVentaEfectivo\r\n                producto.precio_venta_tarjeta = valorDeVentaTarjeta\r\n            }\r\n            producto._id = productoEditar._id\r\n            editarProducto(producto, cantidad, desdeForm)\r\n            setCantidad(\"\")\r\n            setProveedorSelect(producto.proveedor)\r\n            setValoresP(\"\")\r\n            traerProductos()\r\n            alertaEditarCorrecto()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className={`${productoEditar ? \"text-green-600 dark:text-green-700\" : \"text-blue-900\"} font-black text-3xl sm:text-4xl  dark:text-blue-300 text-center`}>{productoEditar ? \"Editar Producto\": \"Agregar Producto\"}</h1>\r\n            <p className=\"mt-3 text-center text-black dark:text-gray-50\">Llena los siguientes campos para {productoEditar ? \"editar\" : \"agregar\"} un producto</p>\r\n            <div className='bg-white dark:bg-gray-900 mt-10 px-5 pt-1 pb-5 rounded-md shadow-md xl:w-auto 2xl:w-11/12 mx-auto  '>\r\n                <h1 className='text-gray-600 dark:text-white font-bold text-xl uppercase text-center'></h1>\r\n                \r\n                <form \r\n                    className=\"mt-10\"\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"grid lg:grid-cols-2 xl:grid-cols-2 lg:gap-2 xl:gap-4 \">\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"nombre\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Nombre *</label>\r\n                            </div>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 uppercase block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"nombre\"\r\n                                placeholder=\"Ej. Pendrive 8Gb 3.0\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"marca\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Marca</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 uppercase block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"marca\"\r\n                                placeholder=\"Ej. Kingston\"\r\n                                name=\"marca\"\r\n                                value={marca}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"modelo\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Modelo</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 uppercase block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"modelo\"\r\n                                placeholder=\"DTKN/64GB\"\r\n                                name=\"modelo\"\r\n                                value={modelo}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"codigo\" className=\"text-gray-800 dark:text-gray-300 font-bold\">Código *</label>\r\n\r\n                            </div>\r\n                            <input  \r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                className=\" mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"codigo\"\r\n                                placeholder=\"123\"\r\n                                name=\"codigo\"\r\n                                value={codigo}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"barras\" className=\"text-gray-800 dark:text-gray-300 font-bold\">Código de barras</label>\r\n\r\n                            </div>\r\n                            <input  \r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                className=\" mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"barras\"\r\n                                placeholder=\"893247539457\"\r\n                                name=\"barras\"\r\n                                value={barras}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"rubro\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Rubro</label>\r\n                                <label htmlFor=\"rubro\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Rubros</label>\r\n\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    className={` mt-2  block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300`}\r\n                                    id=\"rubro\"\r\n                                    placeholder=\"Cables\"\r\n                                    name=\"rubro\"\r\n                                    value={valoresR}\r\n                                    onChange={onChangeRubroInput}\r\n                                />\r\n                                <select  \r\n                                    onChange={onChangeRubroSelect} \r\n                                    value={rubroSelect} \r\n                                    className=\"uppercase text-center mt-2 ml-4 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                >\r\n                                    <option value=\"\" className=\"uppercase\"> -- Seleccione --</option>\r\n                                    {Object.keys(rubros).length > 0  && (\r\n                                        <>\r\n                                            {rubros.map((rubro, i) => (\r\n                                                <Rubro\r\n                                                    key={i}\r\n                                                    rubro={rubro}\r\n                                                />\r\n                                            ))}\r\n                                        </>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"grid grid-cols-9\">\r\n                                <label htmlFor=\"cantidad\" className=\"text-gray-800 dark:text-gray-300 font-bold text-center col-span-1\">N°</label>\r\n                                <label htmlFor=\"proveedor\" className=\"text-gray-800 dark:text-gray-300 font-bold text-left col-span-4\">Proveedor</label>\r\n                                <label htmlFor=\"selectp\" className=\"text-gray-800 dark:text-gray-300 font-bold text-right col-span-4\">Proveedores</label>\r\n                            </div>\r\n                            <div className=\"grid grid-cols-9\">\r\n                                <input\r\n                                    type=\"tel\"\r\n                                    autoComplete=\"off\"\r\n                                    className={`text-center mt-2 block col-span-1 p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300`}\r\n                                    id=\"cantidad\"\r\n                                    name=\"cantidad\"\r\n                                    value={cantidad}\r\n                                    onChange={e => setCantidad(e.target.value)}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    className={` mt-2 ml-1 col-span-4 block  p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300`}\r\n                                    id=\"proveedor\"\r\n                                    placeholder=\"MercadoLibre\"\r\n                                    name=\"proveedor\"\r\n                                    value={valoresP}\r\n                                    onChange={onChangeProveedorInput}\r\n                                />\r\n                                \r\n                                <select \r\n                                    id=\"selectp\" \r\n                                    className=\"uppercase text-center mt-2 ml-1 block col-span-4 p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                    value={proveedorSelect} \r\n                                    onChange={onChangeProveedorSelect} \r\n                                >\r\n                                    <option value=\"\" className=\"uppercase\">-- Seleccione --</option>\r\n                                    {Object.keys(proveedores).length > 0  ? (\r\n                                        <>\r\n                                            {proveedores.map((proveedor, i) => (\r\n                                                <Proveedor\r\n                                                    key={i}\r\n                                                    proveedor={proveedor}\r\n                                                />\r\n                                            ))}\r\n                                        </>\r\n                                    ) : null}\r\n                                </select>\r\n                            </div>\r\n                        </div>     \r\n\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"valor_dolar_compra\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Precio dolar *</label>\r\n                            </div>\r\n                            <input\r\n                                type=\"tel\"\r\n                                step=\"any\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"valor_dolar_compra\"\r\n                                placeholder=\"$112\"\r\n                                name=\"valor_dolar_compra\"\r\n                                value={valor_dolar_compra}\r\n                                onChange={onChangeNumeros}\r\n                            />\r\n                        </div>                 \r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"precio_compra_dolar\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Precio compra en USD</label>\r\n                            </div>                            \r\n                            <input\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"precio_compra_dolar\"\r\n                                placeholder=\"$28,84\"\r\n                                name=\"precio_compra_dolar\"\r\n                                value={precio_compra_dolar}\r\n                                onChange={onChangeNumeros}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"precio_compra_peso\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Precio compra en AR$</label>\r\n                            </div>                          \r\n                            <input\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"precio_compra_peso\"\r\n                                placeholder=\"$1250\"\r\n                                name=\"precio_compra_peso\"\r\n                                value={precio_compra_peso}\r\n                                onChange={onChangeNumeros}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"rentabilidad\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Rentabilidad</label>\r\n                            </div>                            \r\n                            <input\r\n                                type=\"tel\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"rentabilidad\"\r\n                                placeholder=\"40%\"\r\n                                name=\"rentabilidad\"\r\n                                value={rentabilidad}\r\n                                onChange={onChangeNumeros}\r\n                            />\r\n                        </div>\r\n                            <div className=\"mb-4\">\r\n                                <div className=\"grid grid-cols-4\">\r\n                                    <label htmlFor=\"precio_venta\" className=\"text-gray-800  dark:text-gray-300 font-bold  \"> al ingreso</label>\r\n                                    <label htmlFor=\"precio_venta_conocidos\" className=\"text-gray-800  dark:text-gray-300 font-bold  \"> conocidos </label>\r\n                                    <label htmlFor=\"precio_venta_efectivo\" className=\"text-gray-800  dark:text-gray-300 font-bold  \"> efectivo </label>\r\n                                    <label htmlFor=\"precio_venta_tarjeta\" className=\"text-gray-800  dark:text-gray-300 font-bold  \"> tarjeta </label>\r\n                                </div>\r\n                                <div className=\"grid grid-cols-4 gap-1\">\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        autoComplete=\"off\"\r\n                                        className=\"mt-2  block w-full p-3 pr-0 hover:cursor-pointer  justify-end rounded-md font-bold text-red-600 bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                        id=\"precio_venta\"\r\n                                        placeholder=\"$0\"\r\n                                        name=\"precio_venta\"\r\n                                        value={  valorDeVenta > 0 ? valorDeVenta :  precio_venta}\r\n                                        readOnly={true}\r\n                                        \r\n                                    />\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        autoComplete=\"off\"\r\n                                        className=\"mt-2  block w-full p-3 pr-0 hover:cursor-pointer  justify-end rounded-md font-bold text-red-600 bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                        id=\"precio_venta_conocidos\"\r\n                                        placeholder=\"$0\"\r\n                                        name=\"precio_venta_conocidos\"\r\n                                        value={ valorDeVentaConocidos > 0 ? valorDeVentaConocidos : precio_venta_conocidos}\r\n                                        readOnly={true}\r\n                                        \r\n                                    />\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        autoComplete=\"off\"\r\n                                        className=\"mt-2  block w-full p-3 pr-0 hover:cursor-pointer  justify-end rounded-md font-bold text-red-600 bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                        id=\"precio_venta_efectivo\"\r\n                                        placeholder=\"$0\"\r\n                                        name=\"precio_venta_efectivo\"\r\n                                        value={ valorDeVentaEfectivo > 0 ? valorDeVentaEfectivo : precio_venta_efectivo}\r\n                                        readOnly={true}\r\n                                        \r\n                                    />\r\n                                    <input\r\n                                        type=\"tel\"\r\n                                        autoComplete=\"off\"\r\n                                        className=\"mt-2  block w-full p-3 pr-0 hover:cursor-pointer  justify-end rounded-md font-bold text-red-600 bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                        id=\"precio_venta_tarjeta\"\r\n                                        placeholder=\"$0\"\r\n                                        name=\"precio_venta_tarjeta\"\r\n                                        value={ valorDeVentaTarjeta > 0 ? valorDeVentaTarjeta : precio_venta_tarjeta}\r\n                                        readOnly={true}\r\n                                        \r\n                                    />\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            \r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"fecha_compra\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Fecha de compra</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 appearance-none rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"fecha_compra\"\r\n                                placeholder=\"fecha_compra\"\r\n                                name=\"fecha_compra\"\r\n                                value={fecha_compra}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        \r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"limiteFaltante\" className=\"text-gray-800  dark:text-gray-300 font-bold  \">Añadir como faltante cuanto llegue a: </label>\r\n                            </div>  \r\n                            <div className=\"flex gap-4\">          \r\n                                <input\r\n                                    type=\"button\"\r\n                                    className={`w-2/4 lg:w-1/4 rounded-md mt-2 block p-3 hover:cursor-pointer ${valorFaltante ? \"bg-blue-200\" : \"bg-gray-400 \"}`}\r\n                                    onClick={() => setValorFaltante(!valorFaltante)}\r\n                                    value={valorFaltante ? \"Si\"  : \"No\"}\r\n                                >\r\n                                </input>\r\n                                <input\r\n                                    type=\"tel\"\r\n                                    autoComplete=\"off\"\r\n                                    className={` ${!valorFaltante && \"hover:cursor-not-allowed\"} mt-2 block w-full p-3 text-right rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300`}\r\n                                    id=\"limiteFalante\"\r\n                                    placeholder=\"2 UNIDADES\"\r\n                                    name=\"limiteFaltante\"\r\n                                    value={limiteFaltante}\r\n                                    onChange={onChange}\r\n                                    disabled={!valorFaltante}\r\n                                />\r\n                            </div>                                    \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"notas\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Notas</label>\r\n                        <textarea\r\n                            className=\" mt-2 block w-full h-48 p-3 rounded-md  bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                            id=\"notas\"\r\n                            placeholder=\"Ingresa tu notas\"\r\n                            name=\"notas\"\r\n                            value={notas}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={productoEditar ? \"Editar producto\" : \"Agregar producto\"}\r\n                        className={`${productoEditar ? \"bg-green-600 active:bg-green-700 dark:bg-green-800 dark:active:bg-green-900\" : \"bg-blue-800 active:bg-blue-900 dark:bg-blue-500 dark:active:bg-blue-600\"} mt-5 w-full  p-3 text-white uppercase font-bold text-lg rounded-md cursor-pointer`}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Formulario\r\n\r\n","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\ListadoProductos.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\NoEncontrado.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Producto.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\ProductoNuevo.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Proveedor.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\Rubro.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\components\\productos\\VerProducto.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\lib\\dbConnect.js",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\pages\\compras.jsx",[],{"ruleId":"150","severity":1,"message":"151","line":95,"column":8,"nodeType":"152","endLine":95,"endColumn":17,"suggestions":"153"},{"ruleId":"150","severity":1,"message":"154","line":115,"column":8,"nodeType":"152","endLine":115,"endColumn":25,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"154","line":118,"column":8,"nodeType":"152","endLine":118,"endColumn":18,"suggestions":"156"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'traerProductos'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has a missing dependency: 'producto'. Either include it or remove the dependency array.",["158"],["159"],{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [traerProductos, usuario]",{"range":"166","text":"167"},"Update the dependencies array to be: [producto, proveedorSelect]",{"range":"168","text":"169"},"Update the dependencies array to be: [producto, valoresP]",{"range":"170","text":"171"},[4316,4325],"[traerProductos, usuario]",[5030,5047],"[producto, proveedorSelect]",[5119,5129],"[producto, valoresP]"]