[{"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\404.jsx":"1","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\confirmar\\[token].jsx":"2","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\crear-cuenta.jsx":"3","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\faltantes.jsx":"4","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\index.jsx":"5","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\nuevoproducto.jsx":"6","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\olvide-password\\[token].jsx":"7","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\olvide-password.jsx":"8","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\producto\\editar\\[url].jsx":"9","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\producto\\[id].jsx":"10","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\productos.jsx":"11","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\_app.jsx":"12","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\ContraseñaCambiada.jsx":"13","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\Login.jsx":"14","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\NuevaContraseña.jsx":"15","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\NuevaCuenta.jsx":"16","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\OlvidePassword.jsx":"17","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\faltantes\\ListadoFaltantes.jsx":"18","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\faltantes\\ProductoFaltante.jsx":"19","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\layout\\Layout.jsx":"20","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Alerta.jsx":"21","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\EditarProducto.jsx":"22","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Formulario.jsx":"23","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\ListadoProductos.jsx":"24","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\NoEncontrado.jsx":"25","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Producto.jsx":"26","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\ProductoNuevo.jsx":"27","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Proveedor.jsx":"28","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Rubro.jsx":"29","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\VerProducto.jsx":"30","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\lib\\dbConnect.js":"31"},{"size":230,"mtime":1646696015659,"results":"32","hashOfConfig":"33"},{"size":1182,"mtime":1649313296711,"results":"34","hashOfConfig":"33"},{"size":859,"mtime":1649874289929,"results":"35","hashOfConfig":"33"},{"size":318,"mtime":1647887965940,"results":"36","hashOfConfig":"33"},{"size":871,"mtime":1649874289930,"results":"37","hashOfConfig":"33"},{"size":885,"mtime":1649874289931,"results":"38","hashOfConfig":"33"},{"size":831,"mtime":1649830625289,"results":"39","hashOfConfig":"33"},{"size":872,"mtime":1649874289932,"results":"40","hashOfConfig":"33"},{"size":1910,"mtime":1649874289934,"results":"41","hashOfConfig":"33"},{"size":1851,"mtime":1649317238823,"results":"42","hashOfConfig":"33"},{"size":854,"mtime":1649874289935,"results":"43","hashOfConfig":"33"},{"size":471,"mtime":1648489952510,"results":"44","hashOfConfig":"33"},{"size":889,"mtime":1649830111456,"results":"45","hashOfConfig":"33"},{"size":4746,"mtime":1649311787195,"results":"46","hashOfConfig":"33"},{"size":4933,"mtime":1649830148373,"results":"47","hashOfConfig":"33"},{"size":6693,"mtime":1649311818759,"results":"48","hashOfConfig":"33"},{"size":3524,"mtime":1649311823822,"results":"49","hashOfConfig":"33"},{"size":7186,"mtime":1649874277539,"results":"50","hashOfConfig":"33"},{"size":2999,"mtime":1649829515192,"results":"51","hashOfConfig":"33"},{"size":4339,"mtime":1649830186080,"results":"52","hashOfConfig":"33"},{"size":246,"mtime":1649267380760,"results":"53","hashOfConfig":"33"},{"size":201,"mtime":1643839658205,"results":"54","hashOfConfig":"33"},{"size":36879,"mtime":1649830300741,"results":"55","hashOfConfig":"33"},{"size":7486,"mtime":1649971998359,"results":"56","hashOfConfig":"33"},{"size":541,"mtime":1646700963046,"results":"57","hashOfConfig":"33"},{"size":9747,"mtime":1649830961387,"results":"58","hashOfConfig":"33"},{"size":160,"mtime":1646692016509,"results":"59","hashOfConfig":"33"},{"size":150,"mtime":1648061302781,"results":"60","hashOfConfig":"33"},{"size":130,"mtime":1648061322743,"results":"61","hashOfConfig":"33"},{"size":10676,"mtime":1649830948693,"results":"62","hashOfConfig":"33"},{"size":892,"mtime":1649975022703,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qdc5ti",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\404.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\confirmar\\[token].jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\crear-cuenta.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\faltantes.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\index.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\nuevoproducto.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\olvide-password\\[token].jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\olvide-password.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\producto\\editar\\[url].jsx",["132"],"import Layout from \"../../../components/layout/Layout\";\r\nimport clienteAxios from \"../../../config/axios\";\r\nimport dbConnect from \"../../../lib/dbConnect\";\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport Formulario from \"../../../components/productos/Formulario\";\r\nimport productoContext from \"../../../context/productos/productoContext\";\r\nimport authContext from \"../../../context/auth/authContext\";\r\nimport NoEncontrado from \"../../../components/productos/NoEncontrado\";\r\n\r\nconst Edicion = ({productoEditar}) => {\r\n\r\n  const AuthContext = useContext(authContext)\r\n  const {usuarioAutenticado, usuario} = AuthContext\r\n\r\n  const productosContext = useContext(productoContext)\r\n  const {productoActual} = productosContext\r\n\r\n  const [coincide, setCoincide] = useState(true)\r\n\r\n  //Autentico al usuario y agrego el producto actual al state\r\n  useEffect(() => {\r\n    usuarioAutenticado()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  //Cuando me autentique, verifico que el producto que traigo es el del usuario que está logueado\r\n  useEffect(() => {\r\n    if(usuario) {\r\n      productoActual(productoEditar)\r\n      if(productoEditar.creador !== usuario._id){\r\n        setCoincide(false)\r\n      }  \r\n    }\r\n  }, [usuario])\r\n\r\n  return (\r\n    <>\r\n      {coincide ? (\r\n        <Layout pagina={`Ver - ${productoEditar.nombre}`}>\r\n          <Formulario\r\n            key={productoEditar._id}\r\n            productoEditar={productoEditar}\r\n          />\r\n        </Layout>\r\n      ): <NoEncontrado/>\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\nexport async function getServerSideProps({ params: {url} }) {\r\n  await dbConnect()\r\n  const respuesta = await clienteAxios.get(`/api/productos/${url}`)\r\n  if(respuesta.data.redireccionar) {\r\n    return {notFound: true}\r\n  }\r\n  const productoEditar = respuesta.data.producto\r\n  return { props: { productoEditar }}\r\n}\r\n\r\nexport default Edicion;\r\n","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\producto\\[id].jsx",["133","134"],"import Layout from '../../components/layout/Layout';\r\nimport VerProducto from '../../components/productos/VerProducto';\r\nimport dbConnect from '../../lib/dbConnect';\r\nimport clienteAxios from \"../../config/axios\"\r\nimport authContext from '../../context/auth/authContext';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport productoContext from '../../context/productos/productoContext';\r\nimport NoEncontrado from '../../components/productos/NoEncontrado';\r\n\r\nconst Ver = ({producto}) => { \r\n\r\n  const AuthContext = useContext(authContext)\r\n  const {usuarioAutenticado, usuario} = AuthContext\r\n  \r\n  const productosContext = useContext(productoContext)\r\n  const {productoActual} = productosContext\r\n\r\n  const [coincide, setCoincide] = useState(true)\r\n\r\n  //Autentico al usuario y agrego el producto actual al state\r\n  useEffect(() => {\r\n    usuarioAutenticado()\r\n  },[])\r\n  \r\n  //Cuando me autentique, verifico que el producto que traigo es el del usuario que está logueado\r\n   useEffect(() => {\r\n    if(usuario) {\r\n      productoActual(producto)\r\n      if(producto.creador !== usuario._id) {\r\n        setCoincide(false)\r\n      }\r\n    }\r\n   }, [usuario])\r\n\r\n  return (\r\n    <>\r\n      {coincide ? (\r\n        <Layout pagina={`Ver - ${producto.nombre}`}>\r\n          <VerProducto\r\n            key={producto._id}\r\n            producto={producto}\r\n          />\r\n        </Layout>\r\n      ): <NoEncontrado/>\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\n\r\nexport async function getServerSideProps({ params: {id} }) {\r\n  await dbConnect()\r\n  const respuesta = await clienteAxios.get(`/api/productos/${id}`)\r\n  if(respuesta.data.redireccionar) {  //si es true\r\n    return {notFound: true} //redirecciono a la pagina 404. notFound es una funcion de next\r\n  }\r\n  const producto = respuesta.data.producto\r\n  return { props: { producto }}\r\n}\r\n\r\nexport default Ver;\r\n","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\productos.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\pages\\_app.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\ContraseñaCambiada.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\Login.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\NuevaContraseña.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\NuevaCuenta.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\auth\\OlvidePassword.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\faltantes\\ListadoFaltantes.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\faltantes\\ProductoFaltante.jsx",["135","136"],"import Link from \"next/link\";\r\nimport { useContext } from \"react\";\r\nimport productoContext from \"../../context/productos/productoContext\";\r\nimport faltanteContext from \"../../context/faltantes/faltantesContext\";\r\nimport authContext from \"../../context/auth/authContext\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst ProductoFaltante = ({producto}) => {\r\n    const {nombre, marca, codigo, disponibles, modelo, rubro, _id, faltante, proveedor} = producto\r\n\r\n    const AuthContext = useContext(authContext)\r\n    const {modo} = AuthContext\r\n    \r\n    const productosContext = useContext(productoContext)\r\n    const {productoActual} = productosContext\r\n\r\n    const faltantesContext = useContext(faltanteContext)\r\n    const {eliminarFaltante} = faltantesContext\r\n\r\n    const Eliminado = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 2000\r\n    })\r\n\r\n    const eliminarElFaltante = async () => {\r\n        await eliminarFaltante(_id)\r\n        Eliminado.fire({\r\n            icon: 'error',\r\n            title: 'Quitado de faltantes',\r\n            color: `${modo ? \"white\" : \"#545454\"}`,\r\n            background: `${modo ? \"#505050\"  : \"white\"}`,\r\n          })\r\n    }\r\n\r\n    return (\r\n        <tr className=\"border-b dark:border-none hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n            <td className=\"p-3 dark:text-gray-50 text-center font-semibold\">{codigo}</td>\r\n            <td className=\"dark:text-gray-50 p-3\">{nombre}</td>\r\n            <td className=\"p-3 dark:text-gray-50 text-center\">{marca}</td>\r\n            <td className=\"p-3 dark:text-gray-50 text-center\">{modelo}</td>\r\n            <td className=\"p-3 dark:text-gray-50 text-center\">{rubro}</td>\r\n            <td className=\"p-3 dark:text-gray-50 text-center\">{proveedor}</td>\r\n\r\n            <td className=\"p-3 dark:text-gray-50 text-center uppercase\">{disponibles && faltante ? <span className=\"font-bold text-red-600 p-1\">{disponibles}</span> : disponibles && !faltante ? disponibles : <span className=\"font-black text-white bg-red-600 p-1 uppercase\">Sin stock</span>}</td>\r\n            <td className=\"p-3 w-40 mt-2  \">\r\n\r\n                <Link href={`/producto/${_id}`}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"bg-blue-600 hover:bg-blue-900 mb-2 w-full text-white p-2 uppercase font-bold text-xs mr-3 rounded-md\"\r\n                        onClick={() => productoActual(producto)}\r\n                    >Detalles</button>\r\n                </Link>\r\n                <Link href=\"\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"bg-red-600 hover:bg-red-900 mb-2 w-full text-white p-2 uppercase font-bold text-xs mr-3 rounded-md\"\r\n                        onClick={eliminarElFaltante}\r\n                    >Quitar de faltantes</button>\r\n                </Link>\r\n                \r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default ProductoFaltante;\r\n","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\layout\\Layout.jsx",["137","138"],"import { useContext, useEffect, useState} from \"react\"\r\nimport Head from \"next/head\"\r\nimport Link from \"next/link\"\r\nimport Image from \"next/image\"\r\nimport { useRouter } from \"next/router\"\r\nimport authContext from \"../../context/auth/authContext\"\r\nimport productoContext from \"../../context/productos/productoContext\"\r\n\r\nconst Layout = ({children, pagina}) => {\r\n\r\n    const AuthContext = useContext(authContext)\r\n    const {usuario, cerrarSesion, token, traerTema} = AuthContext\r\n\r\n    const productosContext = useContext(productoContext)\r\n    const {limpiarSeleccionado, limpiarApp} = productosContext\r\n\r\n    const [oscuro, setOscuro] = useState(false)\r\n\r\n    const router = useRouter()\r\n    const urlActual = router.route\r\n  \r\n\r\n    useEffect(() => {\r\n        if(!token) {\r\n            router.push(\"/\")\r\n        }\r\n    },[token])\r\n\r\n    \r\n\r\n    //traigo el tema del LS\r\n    useEffect(() => {\r\n        const temaLS = JSON.parse(localStorage.getItem(\"Modo oscuro\")) ?? false\r\n        setOscuro(temaLS)\r\n    },[])\r\n\r\n    //guardo el tema en LS\r\n    useEffect(() => {\r\n        localStorage.setItem(\"Modo oscuro\", JSON.stringify(oscuro))\r\n        traerTema(oscuro)\r\n    },[oscuro])\r\n\r\n    //cambio el estado del tema a oscuro o claro\r\n    const darkMode = () => {\r\n        setOscuro(!oscuro)\r\n    }\r\n\r\n    const vaciarStates = () => {\r\n        cerrarSesion()\r\n        limpiarApp()\r\n    }\r\n    return (\r\n        <div className=\"min-h-screen\">\r\n            <Head>\r\n                <title>Inventario - {pagina}</title>  \r\n            </Head>\r\n\r\n            <div className={`lg:flex md:min-h-screen sm:min-h-screen bg-gray-100 ${oscuro && \"dark\"}`}>\r\n                <div className=\"lg:w-1/5 bg-blue-900  px-5  dark:bg-gray-900 flex flex-col  justify-between\">\r\n                    <p className=\"text-white text-4xl font-black text-center\">Hola, {usuario ? <span>{usuario.nombre}</span> : null}</p>\r\n                    \r\n                    <nav className=\"mt-10 lg:flex-col lg:h-5/6\">\r\n                        <Link href=\"/productos\">\r\n                            <a className={`${urlActual === \"/productos\" ? \"bg-blue-300 bg-opacity-10 rounded-md  text-white\" : \"text-white\"} text-2xl block p-2 mt-2 hover:text-blue-300`}>Productos</a> \r\n                        </Link>\r\n\r\n                        <Link href=\"/nuevoproducto\">\r\n                            <a \r\n                            onClick={() => limpiarSeleccionado()}\r\n                            className={`${urlActual === \"/nuevoproducto\" ? \"bg-blue-300 bg-opacity-10 rounded-md  text-white\" : \"text-white\"} text-2xl block p-2 mt-2 hover:text-blue-300`}>Nuevo Producto</a>\r\n                        </Link>\r\n                        <Link href=\"/faltantes\">\r\n                            <a \r\n                            onClick={() => limpiarSeleccionado()}\r\n                            className={`${urlActual === \"/faltantes\" ? \"bg-blue-300 bg-opacity-10 rounded-md  text-white\" : \"text-white\"} text-2xl block p-2 mt-2 hover:text-blue-300`}>Faltantes</a>\r\n                        </Link>\r\n                    </nav>\r\n\r\n                    <div className=\"flex flex-row justify-between mb-2\">\r\n                        <Image \r\n                            src={oscuro ? \"/light_mode.svg\" : \"/dark_mode.svg\"}\r\n                            alt={oscuro ? \"light\" : \"dark\"}\r\n                            width={50} \r\n                            height={50}\r\n                            priority={true}\r\n                            className=\"cursor-pointer\"\r\n                            onClick={darkMode}\r\n                        />\r\n                        <Image \r\n                            src={oscuro ? \"/logout_light.svg\" : \"/logout_dark.svg\"}\r\n                            alt=\"Cerrar Sesion\" \r\n                            width={50} \r\n                            height={50}\r\n                            priority={true}\r\n                            className=\"cursor-pointer\"\r\n                            onClick={() => vaciarStates()}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\" lg:w-4/5 p-2 lg:p-10 h-screen  dark:bg-gray-800 overflow-x-auto \">\r\n                    {children}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Alerta.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\EditarProducto.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Formulario.jsx",["139","140","141","142"],"import { useState, useContext, useEffect } from \"react\"\r\nimport Rubro from \"./Rubro\"\r\nimport Proveedor from \"./Proveedor\"\r\nimport { hoy } from \"../../helpers\"\r\nimport productoContext from \"../../context/productos/productoContext\"\r\nimport authContext from \"../../context/auth/authContext\"\r\nimport Swal from \"sweetalert2\"\r\n\r\nconst Formulario = ({productoEditar}) => {\r\n\r\n    const AuthContext = useContext(authContext)\r\n    const {usuario, modo} = AuthContext\r\n\r\n    const productosContext = useContext(productoContext)\r\n    const { \r\n        productoSeleccionado, \r\n        agregarProducto, \r\n        agregarRubro, \r\n        agregarProveedor, \r\n        editarProducto, \r\n        mensajeCodigo, \r\n        mensajeRubro, \r\n        mensajeProveedor, \r\n        traerProductos, \r\n        traerRubros, \r\n        rubros, \r\n        proveedores, \r\n        traerProveedores, \r\n        valorDeVenta, \r\n        limpiarPrecioVenta, \r\n        precioVenta,\r\n        traerDolarAPI, \r\n        traerDolarBD,\r\n    } = productosContext\r\n   \r\n    const [valoresR, setValoresR] = useState(\"\")    //contiene lo que voy escribiendo en rubro\r\n    const [valoresP, setValoresP] = useState(\"\")    //contiene lo que voy escribiendo en proveedor\r\n    const [escribiendoR, setEscribiendoR] = useState(false)   //cuando escribo pasa a true\r\n    const [escribiendoP, setEscribiendoP] = useState(false)   //cuando escribo pasa a true\r\n    const [rubroSelect, setRubroSelect] = useState(productoEditar ? productoEditar.rubro : \"\")\r\n    const [proveedorSelect, setProveedorSelect] = useState(productoEditar ? productoEditar.proveedor : \"\")\r\n    const [valorFaltante, setValorFaltante] = useState(productoEditar ? productoEditar.añadirFaltante : false)\r\n\r\n    const [producto, setProducto] = useState({\r\n        nombre: productoEditar?.nombre ?? \"\",\r\n        modelo: productoEditar?.modelo ?? \"\",\r\n        marca: productoEditar?.marca ?? \"\",\r\n        codigo: productoEditar?.codigo ?? \"\",\r\n        rubro: productoEditar?.rubro ?? \"\",\r\n        valor_dolar_compra: productoEditar?.valor_dolar_compra ?? \"\",\r\n        precio_venta: productoEditar?.precio_venta ?? \"\",\r\n        precio_compra_dolar: productoEditar?.precio_compra_dolar ?? \"\",\r\n        precio_compra_peso: productoEditar?.precio_compra_peso ?? \"\",\r\n        fecha_compra: productoEditar?.fecha_compra ?? hoy,\r\n        proveedor: productoEditar?.proveedor ?? \"\",\r\n        disponibles: productoEditar?.disponibles ?? \"\",\r\n        rentabilidad: productoEditar?.rentabilidad ?? \"\",\r\n        notas: productoEditar?.notas ?? \"\",\r\n        faltante: productoEditar?.faltante ?? false,\r\n        limiteFaltante: productoEditar?.limiteFaltante ?? \"\",\r\n        añadirFaltante: productoEditar?.añadirFaltante ?? false\r\n    })\r\n    const {nombre, marca, modelo, codigo, rubro, precio_venta, precio_compra_dolar, fecha_compra, precio_compra_peso, valor_dolar_compra, proveedor, disponibles, rentabilidad, notas, limiteFaltante, añadirFaltante} = producto\r\n    \r\n    //hago un get a todos los productos, a la API de dolar y a la bd de dolar\r\n    useEffect(() => {\r\n        if(usuario) {\r\n            traerProductos()\r\n            traerDolarBD()\r\n            traerDolarAPI()\r\n        }\r\n    }, [usuario])\r\n    \r\n   \r\n    //hago get a los rubros y proveedores cuando se agregue o cambie la lista de todos los productos\r\n    useEffect(() => {\r\n        if(usuario) {\r\n            traerRubros()\r\n            traerProveedores()\r\n        }\r\n    },[usuario])\r\n\r\n    //cada vez que cambie el producto seleccionado me vacia el input de precio sugerido\r\n    useEffect(() => {\r\n        limpiarPrecioVenta()\r\n    }, [productoSeleccionado])\r\n    \r\n    //se fija si en el state de filtrando hay algo, es porque se está escribiendo\r\n    useEffect(() => {\r\n        if(valoresR) {\r\n            setEscribiendoR(true)\r\n        } else {\r\n            setEscribiendoR(false)\r\n        }\r\n    }, [valoresR])\r\n\r\n    useEffect(() => {\r\n        if(valoresP) {\r\n            setEscribiendoP(true)\r\n        } else {\r\n            setEscribiendoP(false)\r\n        }\r\n    }, [valoresP])\r\n\r\n    //cada vez que escriba en los inputs se realiza el calculo aprox para el precio de la venta\r\n    useEffect(() => {\r\n        precioVenta(precio_compra_dolar, valor_dolar_compra, rentabilidad, precio_compra_peso)\r\n    }, [producto])\r\n\r\n    const onChange = e => {\r\n        setProducto({\r\n            ...producto,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n    \r\n    //Al escribir, escribiendo pasa a true, se vacia el select y se deshabilita. \r\n    //Envio lo que escribo al state de valores, y lo que está en valores lo envio al state de producto. Al hacer submit vacio el state de valores, entonces el input queda vacio\r\n    const onChangeRubroInput = e => {\r\n        setValoresR(e.target.value.toUpperCase())\r\n    }\r\n    if(valoresR) {\r\n        producto.rubro = valoresR\r\n    }\r\n    //Si no estoy escribiendo, el select está habilitado y su valor por default es vacio. \r\n    //Como es vacio, muestra el primer option disponible. El primer option no tiene value. \r\n    //Si existen rubros creados los muestra como options. \r\n    //Si selecciono un option, el onchange envia el option seleccionado al state de rubroSelect, el input se deshabilita vacia y deshabilita el input. \r\n    //Al hacer submit, envio el dato del state rubroSelect a el state producto y vacío rubroSelect. \r\n    //Luego de crear el producto el value del select consulta si estoy escribiendo, como no escribo, toma el valor de rubroSelect, como está vacío, muestra el primer option.\r\n    const onChangeRubroSelect = e => {\r\n        setRubroSelect(e.target.value)\r\n    }\r\n    //vacío el input si el select tiene algo\r\n    if(rubroSelect) {\r\n        producto.rubro = \"\"\r\n    }\r\n\r\n    const onChangeProveedorInput = e => {\r\n        setValoresP(e.target.value.toUpperCase())\r\n    }\r\n    if(valoresP) {\r\n       producto.proveedor = valoresP\r\n    }\r\n\r\n    const onChangeProveedorSelect = e => {\r\n        setProveedorSelect(e.target.value)\r\n    }\r\n    if(proveedorSelect) {\r\n        producto.proveedor = \"\"\r\n    }\r\n\r\n    if(valorFaltante) {\r\n        producto.añadirFaltante = true\r\n    } else {\r\n        producto.añadirFaltante = false\r\n    }\r\n\r\n    const alertaNuevoCorrecto = () => {\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: `${modo ? '<h3 style=\"color:white\">Se creó el producto correctamente</h3>' : '<h3 style=\"color:#545454\">Se creó el producto correctamente</h3>'}`,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n        })\r\n    }\r\n    const alertaEditarCorrecto = () => {\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: `${modo ? '<h3 style=\"color:white\">Se modificó el producto correctamente</h3>' : '<h3 style=\"color:#545454\">Se modificó el producto correctamente</h3>'}`,\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n        })\r\n    }\r\n\r\n    //! ENVIAR FORMULARIO\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        //Validar nombre\r\n        if(nombre === \"\"){\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>nombre</b> es obligatorio.</p>' : '<p style=\"color:#545454\">El <b>nombre</b> es obligatorio.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        //valido codigo\r\n        const codigoCambiado = Number(codigo)   //convierto el valor del state a numero\r\n        if(!codigo || codigo < 1 || isNaN(codigo) || !Number.isInteger(codigoCambiado) ) {  //verifico si es numero entero con isInteger\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>código</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>código</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        if(codigo.length > 3) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>código</b> debe ser un número menor a 4 dígitos</p>' : '<p style=\"color:#545454\">El <b>código</b> debe ser un número menor a 4 dígitos</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n      \r\n        //Validar precio del dolar\r\n        if(!valor_dolar_compra) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>precio del dolar </b> es obligatorio.</p>' : '<p style=\"color:#545454\">El <b>precio del dolar </b> es obligatorio.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        } else {\r\n            if(isNaN(valor_dolar_compra) || valor_dolar_compra < 1) {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                    html: `${modo ? '<p style=\"color:white\">El <b>precio del dolar</b> debe ser 1 como mínimo.</p>' : '<p style=\"color:#545454\">El <b>precio del dolar</b> debe ser 1 como mínimo.</p>'}`,\r\n                    background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                  })\r\n                return\r\n            }\r\n        }\r\n        \r\n        //validar valor compra dolar\r\n        if(isNaN(precio_compra_dolar) || precio_compra_dolar < 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>precio de compra en USD</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>precio de compra en USD</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        //validar valor compra peso\r\n        if(isNaN(precio_compra_peso) || precio_compra_peso < 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>precio de compra en ARS</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>precio de compra en ARS</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        //validar rentabilidad\r\n        if(isNaN(rentabilidad) || rentabilidad < 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">La <b>rentabilidad</b> tiene que ser mayor a 0.</p>' : '<p style=\"color:#545454\">La <b>rentabilidad</b> tiene que ser mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }  \r\n        //validar los 2 input juntos del precio\r\n        if(precio_compra_dolar && precio_compra_peso) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">Solo se puede ingresar un tipo de moneda en la compra.</p>' : '<p style=\"color:#545454\">Solo se puede ingresar un tipo de moneda en la compra.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        //Validar el precio de venta\r\n        if(isNaN(precio_venta) || precio_venta < 0) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">El <b>precio de venta</b> debe ser mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>precio de venta</b> debe ser mayor a 0.</p>'}`,\r\n\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n        //Validar stock\r\n        const disponibleCambiado = Number(disponibles)\r\n        if(disponibles < 0 || isNaN(disponibles) || !Number.isInteger(disponibleCambiado)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">La <b>disponibilidad</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">El <b>disponibilidad</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        }\r\n\r\n        const limiteFaltanteCambiado = Number(limiteFaltante)\r\n        if( limiteFaltante < 0 || isNaN(limiteFaltante) || !Number.isInteger(limiteFaltanteCambiado)) {\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: `${modo ? '<h1 style=\"color:white\">Error</h1>' : '<h1 style=\"color:#545454\">Error</h3>'}`,\r\n                html: `${modo ? '<p style=\"color:white\">Los <b>faltantes</b> debe ser un número entero mayor a 0.</p>' : '<p style=\"color:#545454\">Los <b>faltantes</b> debe ser un número entero mayor a 0.</p>'}`,\r\n                background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n              })\r\n            return\r\n        } \r\n        \r\n        \r\n        //si seleccione el rubro, lo mando al state\r\n        if(rubroSelect) {\r\n            producto.rubro = rubroSelect\r\n        }\r\n        if(proveedorSelect) {\r\n            producto.proveedor = proveedorSelect\r\n        }\r\n        //si el input de rubro tiene algo, envio el rubro\r\n        if(valoresR) {  \r\n            agregarRubro(rubro)\r\n        }\r\n        //si el input de proveedores tiene algo, envio el proveedor\r\n        if(valoresP) {  \r\n            agregarProveedor(proveedor)\r\n        }\r\n\r\n        \r\n        //si es nuevo producto\r\n        if(!productoEditar) {\r\n            agregarProducto(producto)   \r\n\r\n            setRubroSelect(\"\")\r\n            setProveedorSelect(\"\")\r\n            setProducto({\r\n                nombre: \"\",\r\n                marca: \"\", \r\n                modelo: \"\", \r\n                codigo: \"\", \r\n                rubro: \"\", \r\n                precio_venta: \"\", \r\n                precio_compra_dolar: \"\", \r\n                fecha_compra: hoy, \r\n                precio_compra_peso: \"\", \r\n                valor_dolar_compra: \"\", \r\n                proveedor: \"\", \r\n                disponibles: \"\", \r\n                rentabilidad: \"\", \r\n                notas: \"\",\r\n                faltante: false,\r\n                limiteFaltante: \"\",\r\n                añadirFaltante: false\r\n                })\r\n            setValoresR(\"\")\r\n            setValoresP(\"\")\r\n            alertaNuevoCorrecto()\r\n        } else {\r\n            //si hay que editar\r\n            producto._id = productoEditar._id\r\n            editarProducto(producto)\r\n            alertaEditarCorrecto()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className={`${productoEditar ? \"text-green-600 dark:text-green-700\" : \"text-blue-900\"} font-black text-4xl  dark:text-blue-300 text-center`}>{productoEditar ? \"Editar Producto\": \"Agregar Producto\"}</h1>\r\n            <p className=\"mt-3 text-center text-black dark:text-gray-50\">Llena los siguientes campos para {productoEditar ? \"Editar\" : \"Agregar\"} Un producto</p>\r\n            <div className='bg-white dark:bg-gray-900 mt-10 px-5 py-10 rounded-md shadow-md xl:w-auto 2xl:w-11/12 mx-auto  '>\r\n                <h1 className='text-gray-600 dark:text-white font-bold text-xl uppercase text-center'></h1>\r\n                \r\n                <form \r\n                    className=\"mt-10\"\r\n                    onSubmit={onSubmit}\r\n                >\r\n                    <div className=\"grid md:grid-cols-1 lg:grid-cols-2 lg:gap-4 \">\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"nombre\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Nombre *</label>\r\n                            </div>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 uppercase block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"nombre\"\r\n                                placeholder=\"Ej. Pendrive 8Gb 3.0\"\r\n                                name=\"nombre\"\r\n                                value={nombre}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"marca\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Marca</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 uppercase block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"marca\"\r\n                                placeholder=\"Ej. Kingston\"\r\n                                name=\"marca\"\r\n                                value={marca}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"modelo\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Modelo</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 uppercase block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"modelo\"\r\n                                placeholder=\"DTKN/64GB\"\r\n                                name=\"modelo\"\r\n                                value={modelo}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"codigo\" className=\"text-gray-800 dark:text-gray-300 font-bold\">Código *</label>\r\n                                {mensajeCodigo && <p className=\"text-xs my-auto bg-red-700 rounded-lg uppercase text-white pl-2 pr-2\">{mensajeCodigo}</p>}\r\n\r\n                            </div>\r\n                            <input  \r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\" mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"codigo\"\r\n                                placeholder=\"123\"\r\n                                name=\"codigo\"\r\n                                value={codigo}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"rubro\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Rubro</label>\r\n                                {mensajeRubro && <p className=\"text-xs my-auto bg-red-700 rounded-lg uppercase text-white pl-2 pr-2\">{mensajeRubro}</p>}\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    className={`${rubroSelect && \"hover:cursor-not-allowed\"} mt-2  block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300`}\r\n                                    id=\"rubro\"\r\n                                    placeholder=\"Cables\"\r\n                                    name=\"rubro\"\r\n                                    value={valoresR}\r\n                                    disabled={rubroSelect && true}\r\n                                    onChange={onChangeRubroInput}\r\n                                />\r\n                                <select  onChange={onChangeRubroSelect} value={escribiendoR ? \"\" : rubroSelect} disabled={escribiendoR && true} className=\"uppercase text-center mt-2 ml-4 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\">\r\n                                    <option value=\"\" className=\"uppercase\"> rubros</option>\r\n                                    {Object.keys(rubros).length > 0  && (\r\n                                        <>\r\n                                            {rubros.map((rubro, i) => (\r\n                                                <Rubro\r\n                                                    key={i}\r\n                                                    rubro={rubro}\r\n                                                />\r\n                                            ))}\r\n                                        </>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"proveedor\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Proveedor</label>\r\n                                {mensajeProveedor && <p className=\"text-xs my-auto bg-red-700 rounded-lg uppercase text-white pl-2 pr-2\">{mensajeProveedor}</p>}\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    className={`${proveedorSelect && \"hover:cursor-not-allowed\"} mt-2  block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300`}\r\n                                    id=\"proveedor\"\r\n                                    placeholder=\"MercadoLibre\"\r\n                                    name=\"proveedor\"\r\n                                    value={valoresP}\r\n                                    disabled={proveedorSelect && true}\r\n                                    onChange={onChangeProveedorInput}\r\n                                />\r\n                                <select  onChange={onChangeProveedorSelect} value={escribiendoP ? \"\" : proveedorSelect} disabled={escribiendoP && true} className=\"uppercase text-center mt-2 ml-4 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\">\r\n                                    <option value=\"\" className=\"uppercase\"> proveedores</option>\r\n                                    {Object.keys(proveedores).length > 0  ? (\r\n                                        <>\r\n                                            {proveedores.map((proveedor, i) => (\r\n                                                <Proveedor\r\n                                                    key={i}\r\n                                                    proveedor={proveedor}\r\n                                                />\r\n                                            ))}\r\n                                        </>\r\n                                    ) : null}\r\n                                </select>\r\n                            </div>\r\n                        </div>     \r\n\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"valor_dolar_compra\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Precio dolar *</label>\r\n                            </div>\r\n                            <input\r\n                                type=\"text\"\r\n                                step=\"any\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"valor_dolar_compra\"\r\n                                placeholder=\"$112\"\r\n                                name=\"valor_dolar_compra\"\r\n                                value={valor_dolar_compra}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>                 \r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"precio_compra_dolar\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Precio compra en USD</label>\r\n                            </div>                            \r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"precio_compra_dolar\"\r\n                                placeholder=\"$28,84\"\r\n                                name=\"precio_compra_dolar\"\r\n                                value={precio_compra_dolar}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"precio_compra_peso\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Precio compra en AR$</label>\r\n                            </div>                          \r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"precio_compra_peso\"\r\n                                placeholder=\"$1250\"\r\n                                name=\"precio_compra_peso\"\r\n                                value={precio_compra_peso}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"rentabilidad\" className=\"text-gray-800 dark:text-gray-300 font-bold font \">Rentabilidad</label>\r\n                            </div>                            \r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"rentabilidad\"\r\n                                placeholder=\"40%\"\r\n                                name=\"rentabilidad\"\r\n                                value={rentabilidad}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"grid grid-cols-2 gap-2\">\r\n                            <div className=\"mb-4\">\r\n                                <div className=\"flex justify-between\">\r\n                                    <label htmlFor=\"precio_venta\" className=\"text-gray-800  dark:text-gray-300 font-bold  \">Precio de venta</label>\r\n                                </div>                                 \r\n                                <input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                    id=\"precio_venta\"\r\n                                    placeholder=\"$ 10.000\"\r\n                                    name=\"precio_venta\"\r\n                                    value={precio_venta}\r\n                                    onChange={onChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"mb-4 justify-items-end\">\r\n                                <label htmlFor=\"valorDeVenta\" className=\"text-gray-800 dark:text-gray-300 font-bold text-right block \">Sugerido</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        autoComplete=\"nope\"\r\n                                        className=\"mt-2 block w-full p-3 pr-0 hover:cursor-pointer text-right justify-end rounded-md font-bold text-red-600 bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                        id=\"valorDeVenta\"\r\n                                        name=\"valorDeVenta\"\r\n                                        defaultValue={valorDeVenta}\r\n                                        readOnly={true}\r\n                                        onClick={() => navigator.clipboard.writeText(`${valorDeVenta}`)}  //al tocar copiar enlace se crea un portapapeles con el link\r\n                                    />                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label htmlFor=\"fecha_compra\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Fecha de compra</label>\r\n                            <input\r\n                                type=\"date\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 appearance-none rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"fecha_compra\"\r\n                                placeholder=\"fecha_compra\"\r\n                                name=\"fecha_compra\"\r\n                                value={fecha_compra}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"disponibles\" className=\"text-gray-800  dark:text-gray-300 font-bold  \">Disponibles</label>\r\n                            </div>                             \r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"mt-2 block w-full p-3 rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                                id=\"disponibles\"\r\n                                placeholder=\"4 UNIDADES\"\r\n                                name=\"disponibles\"\r\n                                value={disponibles}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <div className=\"flex justify-between\">\r\n                                <label htmlFor=\"limiteFaltante\" className=\"text-gray-800  dark:text-gray-300 font-bold  \">Añadir como faltante cuanto llegue a: </label>\r\n                            </div>  \r\n                            <div className=\"flex gap-4\">          \r\n                                <input\r\n                                    type=\"button\"\r\n                                    className={`w-2/4 rounded-md mt-2 block p-3 ${valorFaltante ? \"bg-blue-200\" : \"bg-gray-400 \"}`}\r\n                                    onClick={() => setValorFaltante(!valorFaltante)}\r\n                                    value={valorFaltante ? \"Si\"  : \"No\"}\r\n                                >\r\n                                </input>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    className={` ${!valorFaltante && \"hover:cursor-not-allowed\"} mt-2 block w-full p-3 text-right rounded-md bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300`}\r\n                                    id=\"limiteFalante\"\r\n                                    placeholder=\"2 UNIDADES\"\r\n                                    name=\"limiteFaltante\"\r\n                                    value={limiteFaltante}\r\n                                    onChange={onChange}\r\n                                    disabled={!valorFaltante}\r\n                                />\r\n                            </div>                                    \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"notas\" className=\"text-gray-800 dark:text-gray-300 font-bold \">Notas</label>\r\n                        <textarea\r\n                            className=\" mt-2 block w-full h-48 p-3 rounded-md  bg-gray-50 dark:bg-gray-800 dark:autofill:bg-orange-700 dark:text-white focus:outline-none  focus:ring-1 focus:ring-blue-300\"\r\n                            id=\"notas\"\r\n                            placeholder=\"Ingresa tu notas\"\r\n                            name=\"notas\"\r\n                            value={notas}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <input\r\n                        type=\"submit\"\r\n                        value={productoEditar ? \"Editar producto\" : \"Agregar producto\"}\r\n                        className={`${productoEditar ? \"bg-green-600 dark:bg-green-800\" : \"bg-blue-800  dark:bg-blue-500\"} mt-5 w-full  p-3 text-white uppercase font-bold text-lg rounded-md cursor-pointer`}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Formulario\r\n\r\n","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\ListadoProductos.jsx",["143","144","145","146","147","148","149","150","151"],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\NoEncontrado.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Producto.jsx",["152","153","154","155","156"],"import Link from \"next/link\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport productoContext from \"../../context/productos/productoContext\";\r\nimport faltanteContext from \"../../context/faltantes/faltantesContext\";\r\nimport authContext from \"../../context/auth/authContext\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Producto = ({producto}) => {\r\n    const [colorFaltante, setColorFaltante] = useState(null)\r\n    const {\r\n        nombre, \r\n        marca, \r\n        codigo, \r\n        precio_venta_conocidos, \r\n        precio_venta_efectivo, \r\n        precio_venta_tarjeta, \r\n        disponibles, \r\n        modelo, \r\n        _id, \r\n        faltante\r\n    } = producto\r\n    \r\n    const conocidos = (nombre + \" \" + marca + \" \" + modelo + \" \" + \"$\" + Math.round(precio_venta_conocidos)).trim().replace(/\\s\\s+/g, ' ')   //datos que se copian al hacer click en el precio. El trim elimina los espacios en blanco al principio y al final, y el replace quita 2 o mas espacio entre palabra y palabra\r\n    const efectivo = (nombre + \" \" + marca + \" \" + modelo + \" \" + \"$\" + Math.round(precio_venta_efectivo)).trim().replace(/\\s\\s+/g, ' ')\r\n    const tarjeta = (nombre + \" \" + marca + \" \" + modelo + \" \" + \"$\" + Math.round(precio_venta_tarjeta)).trim().replace(/\\s\\s+/g, ' ')\r\n\r\n    const AuthContext = useContext(authContext)\r\n    const {modo} = AuthContext\r\n\r\n    const productosContext = useContext(productoContext)\r\n    const {productoActual, venderProducto} = productosContext\r\n\r\n    const faltantesContext = useContext(faltanteContext)\r\n    const {agregarFaltante, eliminarFaltante} = faltantesContext\r\n\r\n\r\n    useEffect(() => {\r\n        if(colorFaltante) {\r\n            agregarFaltante(_id)\r\n        }\r\n        if(colorFaltante === false) {\r\n            eliminarFaltante(_id)\r\n            Copiado.fire({\r\n                icon: 'error',\r\n                title: 'Quitado de faltantes',\r\n                background: `${modo ? \"#505050\"  : \"white\"}`,\r\n                color: `${modo ? \"white\" : \"#545454\"}`,\r\n              })\r\n        }\r\n    }, [colorFaltante])\r\n\r\n    const Copiado = Swal.mixin({\r\n        toast: true,\r\n        position: 'top-end',\r\n        showConfirmButton: false,\r\n        timer: 3000\r\n    })\r\n\r\n    const venderElProducto = async () => {\r\n        const valor = await Swal.fire({ //modal del input\r\n            title: `${modo ? '<h5 style=\"color:white\">Unidades</h5>' : '<h5 style=\"color:#545454\">Unidades</h5>'}`,\r\n            background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n            html:`${modo ? '<input id=\"swal-input\" type=\"number\" value=\"1\" style=\"color: white \" class=\"swal2-input\">' : '<input id=\"swal-input\" type=\"number\" value=\"1\" style=\"color: black \" class=\"swal2-input\">'}`,\r\n            focusConfirm: true,\r\n            preConfirm: () => {\r\n                return [\r\n                document.getElementById('swal-input').value\r\n                ]\r\n            },\r\n            showCloseButton: true,\r\n        })\r\n        if(valor.isConfirmed) {\r\n            const unidades = Number(valor.value[0])\r\n            if(unidades < 1 || !unidades || isNaN(unidades) || !Number.isInteger(unidades)) {\r\n                    await Swal.fire({ //le pongo el await para que la siguiente funcion se ejecute cuando quite el modal de error\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    color:\"white\",\r\n                    background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                    html: `${modo ? '<p style=\"color:#a59ff3\">Los <b>unidades a vender</b> deben ser un número entero mayor a 0.</p>' : '<p style=\"color: #545454\">Los <b>unidades a vender</b> deben ser un número entero mayor a 0.</p>'}`,\r\n                })\r\n                return venderElProducto()   //luego de mostrar el modal de error, vuelvo a ejecutar la funcion desde 0\r\n            }\r\n            if(unidades > disponibles) {\r\n                await Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Error',\r\n                    color:\"white\",\r\n                    background: `${modo ? \"rgb(31 41 55)\" : \"white\"}`,\r\n                    html: `${modo ? '<p style=\"color:#a59ff3\"><b>No se pueden vender</b> más unidades de las que hay.</p>' : '<p style=\"color: #545454\">No se pueden vender</b> más unidades de las que hay..</p>'}`,\r\n                })\r\n                return venderElProducto()\r\n            }\r\n            await venderProducto(producto, unidades)\r\n            Copiado.fire({\r\n                icon: 'success',\r\n                title: `${unidades > 1 ? \"Se vendieron \" + unidades + \" unidades de\" + nombre : \"Se vendió \" + unidades + \" unidad de \" + nombre }`,\r\n                background: `${modo ? \"#505050\" : \"white\"}`,\r\n                width: \"25%\",\r\n                color: `${modo ? \"white\" : \"#545454\"}`,\r\n                })\r\n        }\r\n    }\r\n      \r\n\r\n    const añadirFaltante = () => {\r\n        Copiado.fire({\r\n            icon: 'success',\r\n            title: 'Agregado a faltante',\r\n            color: `${modo ? \"white\" : \"#545454\"}`,\r\n            background: `${modo ? \"#505050\"  : \"white\"}`,\r\n          })\r\n        setColorFaltante(!colorFaltante)\r\n        if(colorFaltante === null && faltante) {\r\n            setColorFaltante(false)\r\n        }\r\n    }\r\n    \r\n\r\n    const copiarPrecioTarjeta = () => {\r\n        navigator.clipboard.writeText(`${tarjeta}`)\r\n          Copiado.fire({\r\n            icon: 'success',\r\n            title: 'Copiado',\r\n            color: `${modo ? \"white\" : \"#545454\"}`,\r\n            background: `${modo ? \"#505050\"  : \"white\"}`,\r\n          })\r\n    }\r\n    const copiarPrecioEfectivo = () => {\r\n        navigator.clipboard.writeText(`${efectivo}`)\r\n          Copiado.fire({\r\n            icon: 'success',\r\n            title: 'Copiado',\r\n            color: `${modo ? \"white\" : \"#545454\"}`,\r\n            background: `${modo ? \"#505050\"  : \"white\"}`,\r\n          })\r\n    }\r\n    const copiarPrecioConocidoss = () => {\r\n        navigator.clipboard.writeText(`${conocidos}`)\r\n          Copiado.fire({\r\n            icon: 'success',\r\n            title: 'Copiado',\r\n            color: `${modo ? \"white\" : \"#545454\"}`,\r\n            background: `${modo ? \"#505050\"  : \"white\"}`,\r\n          })\r\n    }\r\n\r\n    return (\r\n        <tr className=\"border-b dark:border-none hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n            <td className=\"p-3 dark:text-gray-50 text-center font-semibold\">{codigo}</td>\r\n            <td className=\"dark:text-gray-50 p-3\">{nombre}</td>\r\n            <td className=\"p-3 dark:text-gray-50 text-center\">{marca}</td>\r\n            <td className=\"p-3 dark:text-gray-50 text-center\">{modelo}</td>\r\n            <td className=\"dark:text-gray-50 text-center uppercase\">{!disponibles ? <span className=\"bg-red-600 font-black text-white p-1  rounded-sm\">Sin stock</span> : disponibles && !faltante && colorFaltante === null || disponibles && colorFaltante === false ? disponibles : disponibles && faltante || disponibles && colorFaltante || disponibles && faltante && colorFaltante === false ? <span className=\"text-red-600 font-bold\">{disponibles}</span> : null}</td>\r\n            <td className=\"p-2 dark:text-gray-50 text-center  text-lg hover:cursor-pointer \">\r\n                <div className=\"flex flex-col\">\r\n                    <p className=\"mb-4 pb-2 pt-2 px-2 hover:rounded-md hover:cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-800 text-3xl font-black \" onClick={copiarPrecioTarjeta}>${precio_venta_tarjeta}</p>\r\n                    <p className=\"pb-2 pt-2 hover:rounded-md hover:cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-800 text-2xl font-medium\" onClick={copiarPrecioEfectivo}>${precio_venta_efectivo}</p>\r\n                    <p className=\"mt-4 pb-2 pt-2 hover:rounded-md hover:cursor-pointer hover:bg-gray-200 dark:hover:bg-gray-800 text-xl\" onClick={copiarPrecioConocidoss}>${precio_venta_conocidos}</p>\r\n                </div>\r\n            </td>\r\n\r\n            <td className=\"p-3 w-40 mt-2  \">\r\n                <Link href=\"\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"bg-gradient-to-r from-green-400 to-blue-500 hover:from-pink-500 hover:to-yellow-500 mb-2 w-full text-black p-2 uppercase font-bold text-xs mr-3 rounded-md\"\r\n                        onClick={venderElProducto}\r\n                    >Vender</button>\r\n                </Link>\r\n                <Link href={`/producto/${_id}`}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"bg-blue-600 hover:bg-blue-900 mb-2 w-full text-white p-2 uppercase font-bold text-xs mr-3 rounded-md\"\r\n                        onClick={() => productoActual(producto)}\r\n                    >Detalles</button>\r\n                </Link>\r\n                <Link href={`/producto/editar/${_id}`}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"bg-green-600 hover:bg-green-900 mb-2 w-full text-white p-2 uppercase font-bold text-xs mr-3 rounded-md\"\r\n                        onClick={() => productoActual(producto)}\r\n                    >Editar</button>\r\n                </Link>\r\n                <Link href=\"\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"bg-red-600 hover:bg-red-900  w-full text-white p-2 uppercase font-bold text-xs mr-3 rounded-md\"\r\n                        onClick={añadirFaltante}\r\n                    >{!faltante && colorFaltante === null || !faltante && colorFaltante === false || faltante && colorFaltante === false ? \"Agregar faltante\" : \"Quitar faltante\"}</button>\r\n                </Link>\r\n                \r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Producto;\r\n","D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\ProductoNuevo.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Proveedor.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\Rubro.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\components\\productos\\VerProducto.jsx",[],"D:\\Documentos\\Documentos\\Cursos\\Curso React\\Proyectos\\Ciber\\cliente\\stock-ciber\\lib\\dbConnect.js",[],{"ruleId":"157","severity":1,"message":"158","line":34,"column":6,"nodeType":"159","endLine":34,"endColumn":15,"suggestions":"160"},{"ruleId":"157","severity":1,"message":"161","line":23,"column":5,"nodeType":"159","endLine":23,"endColumn":7,"suggestions":"162"},{"ruleId":"157","severity":1,"message":"163","line":33,"column":7,"nodeType":"159","endLine":33,"endColumn":16,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":50,"column":17,"nodeType":"167","endLine":50,"endColumn":49},{"ruleId":"165","severity":1,"message":"166","line":57,"column":17,"nodeType":"167","endLine":57,"endColumn":31},{"ruleId":"157","severity":1,"message":"168","line":27,"column":7,"nodeType":"159","endLine":27,"endColumn":14,"suggestions":"169"},{"ruleId":"157","severity":1,"message":"170","line":41,"column":7,"nodeType":"159","endLine":41,"endColumn":15,"suggestions":"171"},{"ruleId":"157","severity":1,"message":"172","line":72,"column":8,"nodeType":"159","endLine":72,"endColumn":17,"suggestions":"173"},{"ruleId":"157","severity":1,"message":"174","line":81,"column":7,"nodeType":"159","endLine":81,"endColumn":16,"suggestions":"175"},{"ruleId":"157","severity":1,"message":"176","line":86,"column":8,"nodeType":"159","endLine":86,"endColumn":30,"suggestions":"177"},{"ruleId":"157","severity":1,"message":"178","line":108,"column":8,"nodeType":"159","endLine":108,"endColumn":18,"suggestions":"179"},{"ruleId":"157","severity":1,"message":"180","line":50,"column":8,"nodeType":"159","endLine":50,"endColumn":10,"suggestions":"181"},{"ruleId":"157","severity":1,"message":"182","line":56,"column":7,"nodeType":"159","endLine":56,"endColumn":9,"suggestions":"183"},{"ruleId":"157","severity":1,"message":"184","line":60,"column":8,"nodeType":"159","endLine":60,"endColumn":17,"suggestions":"185"},{"ruleId":"157","severity":1,"message":"186","line":67,"column":8,"nodeType":"159","endLine":67,"endColumn":21,"suggestions":"187"},{"ruleId":"157","severity":1,"message":"188","line":73,"column":7,"nodeType":"159","endLine":73,"endColumn":20,"suggestions":"189"},{"ruleId":"157","severity":1,"message":"190","line":79,"column":8,"nodeType":"159","endLine":79,"endColumn":21,"suggestions":"191"},{"ruleId":"157","severity":1,"message":"192","line":85,"column":8,"nodeType":"159","endLine":85,"endColumn":20,"suggestions":"193"},{"ruleId":"157","severity":1,"message":"194","line":91,"column":8,"nodeType":"159","endLine":91,"endColumn":21,"suggestions":"195"},{"ruleId":"157","severity":1,"message":"196","line":97,"column":8,"nodeType":"159","endLine":97,"endColumn":27,"suggestions":"197"},{"ruleId":"157","severity":1,"message":"198","line":50,"column":8,"nodeType":"159","endLine":50,"endColumn":23,"suggestions":"199"},{"ruleId":"165","severity":1,"message":"166","line":164,"column":17,"nodeType":"167","endLine":164,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":171,"column":17,"nodeType":"167","endLine":171,"endColumn":49},{"ruleId":"165","severity":1,"message":"166","line":178,"column":17,"nodeType":"167","endLine":178,"endColumn":56},{"ruleId":"165","severity":1,"message":"166","line":185,"column":17,"nodeType":"167","endLine":185,"endColumn":31},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'productoActual' and 'productoEditar'. Either include them or remove the dependency array.","ArrayExpression",["200"],"React Hook useEffect has a missing dependency: 'usuarioAutenticado'. Either include it or remove the dependency array.",["201"],"React Hook useEffect has missing dependencies: 'producto' and 'productoActual'. Either include them or remove the dependency array.",["202"],"@next/next/link-passhref","passHref is missing. See: https://nextjs.org/docs/messages/link-passhref","JSXOpeningElement","React Hook useEffect has a missing dependency: 'router'. Either include it or remove the dependency array.",["203"],"React Hook useEffect has a missing dependency: 'traerTema'. Either include it or remove the dependency array.",["204"],"React Hook useEffect has missing dependencies: 'traerDolarAPI', 'traerDolarBD', and 'traerProductos'. Either include them or remove the dependency array.",["205"],"React Hook useEffect has missing dependencies: 'traerProveedores' and 'traerRubros'. Either include them or remove the dependency array.",["206"],"React Hook useEffect has a missing dependency: 'limpiarPrecioVenta'. Either include it or remove the dependency array.",["207"],"React Hook useEffect has missing dependencies: 'precioVenta', 'precio_compra_dolar', 'precio_compra_peso', 'rentabilidad', and 'valor_dolar_compra'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has a missing dependency: 'traerProductos'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has missing dependencies: 'limpiarSeleccionado', 'traerDolarAPI', and 'traerDolarBD'. Either include them or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'editarProductos'. Either include it or remove the dependency array.",["211"],"React Hook useEffect has missing dependencies: 'filtrando', 'orderCodigo', and 'orderCodigoFiltrados'. Either include them or remove the dependency array.",["212"],"React Hook useEffect has missing dependencies: 'filtrando', 'orderPrecio', and 'orderPrecioFiltrados'. Either include them or remove the dependency array.",["213"],"React Hook useEffect has missing dependencies: 'filtrando', 'orderNombre', and 'orderNombreFiltrados'. Either include them or remove the dependency array.",["214"],"React Hook useEffect has missing dependencies: 'filtrando', 'orderMarca', and 'orderMarcaFiltrados'. Either include them or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'filtrando', 'orderModelo', and 'orderModeloFiltrados'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'filtrando', 'orderDisponibles', and 'orderDisponiblesFiltrados'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has missing dependencies: 'Copiado', '_id', 'agregarFaltante', 'eliminarFaltante', and 'modo'. Either include them or remove the dependency array.",["218"],{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [productoActual, productoEditar, usuario]",{"range":"257","text":"258"},"Update the dependencies array to be: [usuarioAutenticado]",{"range":"259","text":"260"},"Update the dependencies array to be: [producto, productoActual, usuario]",{"range":"261","text":"262"},"Update the dependencies array to be: [router, token]",{"range":"263","text":"264"},"Update the dependencies array to be: [oscuro, traerTema]",{"range":"265","text":"266"},"Update the dependencies array to be: [traerDolarAPI, traerDolarBD, traerProductos, usuario]",{"range":"267","text":"268"},"Update the dependencies array to be: [traerProveedores, traerRubros, usuario]",{"range":"269","text":"270"},"Update the dependencies array to be: [limpiarPrecioVenta, productoSeleccionado]",{"range":"271","text":"272"},"Update the dependencies array to be: [precioVenta, precio_compra_dolar, precio_compra_peso, producto, rentabilidad, valor_dolar_compra]",{"range":"273","text":"274"},"Update the dependencies array to be: [traerProductos]",{"range":"275","text":"276"},"Update the dependencies array to be: [limpiarSeleccionado, traerDolarAPI, traerDolarBD]",{"range":"277","text":"278"},"Update the dependencies array to be: [dolarBD, editarProductos]",{"range":"279","text":"280"},"Update the dependencies array to be: [filtrando, ordenCodigo, orderCodigo, orderCodigoFiltrados]",{"range":"281","text":"282"},"Update the dependencies array to be: [filtrando, ordenPrecio, orderPrecio, orderPrecioFiltrados]",{"range":"283","text":"284"},"Update the dependencies array to be: [filtrando, ordenNombre, orderNombre, orderNombreFiltrados]",{"range":"285","text":"286"},"Update the dependencies array to be: [filtrando, ordenMarca, orderMarca, orderMarcaFiltrados]",{"range":"287","text":"288"},"Update the dependencies array to be: [filtrando, ordenModelo, orderModelo, orderModeloFiltrados]",{"range":"289","text":"290"},"Update the dependencies array to be: [filtrando, ordenDisponibles, orderDisponibles, orderDisponiblesFiltrados]",{"range":"291","text":"292"},"Update the dependencies array to be: [Copiado, _id, agregarFaltante, colorFaltante, eliminarFaltante, modo]",{"range":"293","text":"294"},[1256,1265],"[productoActual, productoEditar, usuario]",[881,883],"[usuarioAutenticado]",[1158,1167],"[producto, productoActual, usuario]",[823,830],"[router, token]",[1169,1177],"[oscuro, traerTema]",[3198,3207],"[traerDolarAPI, traerDolarBD, traerProductos, usuario]",[3445,3454],"[traerProveedores, traerRubros, usuario]",[3608,3630],"[limpiarPrecioVenta, productoSeleccionado]",[4283,4293],"[precioVenta, precio_compra_dolar, precio_compra_peso, producto, rentabilidad, valor_dolar_compra]",[1536,1538],"[traerProductos]",[1655,1657],"[limpiarSeleccionado, traerDolarAPI, traerDolarBD]",[1726,1735],"[dolarBD, editarProductos]",[1887,1900],"[filtrando, ordenCodigo, orderCodigo, orderCodigoFiltrados]",[2049,2062],"[filtrando, ordenPrecio, orderPrecio, orderPrecioFiltrados]",[2212,2225],"[filtrando, ordenNombre, orderNombre, orderNombreFiltrados]",[2371,2383],"[filtrando, ordenMarca, orderMarca, orderMarcaFiltrados]",[2533,2546],"[filtrando, ordenModelo, orderModelo, orderModeloFiltrados]",[2716,2735],"[filtrando, ordenDisponibles, orderDisponibles, orderDisponiblesFiltrados]",[2050,2065],"[Copiado, _id, agregarFaltante, colorFaltante, eliminarFaltante, modo]"]